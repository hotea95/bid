<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bbb.bbb.bbb">

	<!-- 작성 -->
	<insert id="insert" parameterType="DTO">
		insert into expense
		(expense_no,name,use_date,use_price,approve_price,process_status,registration_date,receipt,process_date,remark)
		values(bbb.nextval,#{name},#{use_date},#{use_price},#{approve_price},#{process_status},to_date(sysdate,'yyyy.mm.dd'),#{receipt},#{process_date},#{remark})
	</insert>

	<!-- 전체조회 -->
	<select id="selectall" resultType="DTO">
		select
		expense_no,name,use_date,use_price,approve_price,process_status,registration_date,receipt,process_date,remark
		from expense
	</select>

	<!-- 상세조회 -->
	<select id="select" resultType="DTO">
		select
		expense_no,name,use_date,use_price,approve_price,process_status,registration_date,receipt,process_date,remark
		from expense
		where expense_no = #{expense_no}
	</select>

	<!-- 수정 -->
	<update id="update" parameterType="DTO">
		update expense set process_status = #{process_status}, process_date =
		#{process_date}, approve_price = #{approve_price}, remark = #{remark}
		where expense_no = #{expense_no}
	</update>

	<!-- 페이징 -->
	<select id="listpage" resultType="DTO"
		parameterType="bbb.bbb.bbb.dto.Criteria">
		select
		expense_no,name,use_date,use_price,approve_price,process_status,registration_date,receipt,process_date,remark
		from (
		select
		expense_no,name,use_date,use_price,approve_price,process_status,registration_date,receipt,process_date,remark,
		row_number() over(order by expense_no desc) as rNum
		from expense
		) mb
		where rNum between #{rowStart} and #{rowEnd}
		order by expense_no desc
	</select>

	<select id="listCount" resultType="int">
<![CDATA[
select count(expense_no)
from expense
where expense_no > 0
]]>
	</select>
	
	<!-- 검색 -->
<select id="listSearch" resultType="DTO"
parameterType="bbb.bbb.bbb.dto.SearchCriteria">
select expense_no,name,use_date,use_price,approve_price,process_status,TO_CHAR(registration_date, 'YY/MM/DD') AS registration_date
,receipt,process_date,remark
       from (
           select expense_no,name,use_date,use_price,approve_price,process_status,registration_date,receipt,process_date,remark,
               row_number() over(order by expense_no desc) as rNum
           from expense
        <include refid="search"></include>
       ) mb
      where rNum between #{rowStart} and #{rowEnd}
          order by expense_no desc
</select>

<sql id="search">
	
    <if test="searchTypeYear == 're'.toString()">
    
    <choose>
    <when test="keywordYear == '전체'.toString()">
    where registration_date like '%'
    </when>
    <otherwise>
    where registration_date like '%' || #{keywordYear} || '%'
    </otherwise>
    </choose>
    
    </if>
    
    <if test="searchTypeName == 'name'.toString()">
    
    <choose>
    <when test="keywordName == '전체'.toString()">
    </when>
    <otherwise>
    and name like '%' || #{keywordName} || '%'
    </otherwise>
    </choose>
    
    </if>
    
    <if test="searchTypeStat == 'pr'.toString()">
    
    <choose>
    <when test="keywordStat == '전체'.toString()">
    </when>
    <otherwise>
    and process_status like '%' || #{keywordStat} || '%'
    </otherwise>
    </choose>
    
    </if>

</sql>

	<select id="countSearch" resultType="int">
	<![CDATA[
   select count(expense_no)
    from expense

     where expense_no > 0
]]>
</select>
</mapper>